@using MySchoolDiaryProject.Common
@model MySchoolDiaryProject.Web.ViewModels.Teachers.ListTeachersViewModel
@{
    ViewData["Title"] = "Teacher's Info";

    int previousPage = Model.CurrentPage - 1;
    int nextPage = Model.CurrentPage + 1;
    bool isPrevoiusPageValid = true;
    bool isNextPageValid = true;

    if (previousPage <= 0 || previousPage > Model.PagesCount)
    {
        isPrevoiusPageValid = false;
    }

    if (nextPage <= 0 || nextPage > Model.PagesCount)
    {
        isNextPageValid = false;
    }
}

<h1 style="color:ghostwhite;">@ViewData["Title"]</h1>

<div>
    <h1>
        <a asp-controller="Teacher" asp-action="CreateTeacher" class=" btn btn-primary btn-lg">Create a teacher</a>
    </h1>
</div>


<body class="pictureBookThemeTeachers">
    @*<body style="background-image: linear-gradient(to bottom, rgba(255, 0, 0, 0), rgba(255, 0, 0, 0))">*@
    @*style="opacity: 0.8;*@
    <table class="table table-bordered table-striped table-hover table-light">
        <thead>
            <tr>
                <th>Name</th>
                <th>Middle Name</th>
                <th>Last Name</th>
                <th>Birthday</th>
                <th>Gender</th>
                <th>Phone</th>
                <th>Address</th>
                <th>Subjects</th>
            </tr>
        </thead>

        @foreach (var teacher in Model.Teachers.OrderBy(x => x.Name))
        {
            <tr>
                <td>@teacher.Name</td>
                <td>@teacher.MiddleName</td>
                <td>@teacher.LastName</td>
                <td>@teacher.BirthDate</td>
                <td>@teacher.Gender</td>
                <td>@teacher.Phone</td>
                <td>@teacher.Address</td>
                <td>
                    @foreach (var suject in teacher.SubjectTeachers)
                    {
                        @suject.Subject.Name;
                        <span></span>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <a asp-action="Edit" asp-route-id="id:@teacher.Id-page:@Model.CurrentPage" asp-route-page="@Model.PagesCount">Edit @teacher.Name's Info</a>
                </td>
            </tr>
            <tr>
                <td>
                    <a asp-action="AddSubjectToTeacher" asp-controller="Teacher" asp-route-id="@teacher.Id">Add a subject to teacher</a>
                </td>
            </tr>
            <tr>
                <td>
                    <a asp-action="RemoveSubjectFromTeacher" asp-controller="Teacher" asp-route-id="@teacher.Id">Remove a subject from a teacher</a>
                </td>
            </tr>
        }
    </table>

    <nav aria-label="...">
        <ul class="pagination">

            @if (isPrevoiusPageValid)
            {
                <li class="page-item">
                    <a class="page-link" href="https://localhost:44319/Teacher/AllTeachers?page=@previousPage">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" href="#">Previous</a>
                </li>
            }

            @for (int i = 1; i <= this.Model.PagesCount; i++)
            {
                var active = i == this.Model.CurrentPage ? "active" : string.Empty;

                <li class="page-item @active">
                    <a class="page-link"
                       asp-controller="Teacher"
                       asp-action="AllTeachers"
                       asp-route-page="@i">@i</a>
                </li>
            }


            @if (isNextPageValid)
            {
                <li class="page-item">
                    <a class="page-link" href="https://localhost:44319/Teacher/AllTeachers?page=@nextPage">Next</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            }
        </ul>
    </nav>
</body>
